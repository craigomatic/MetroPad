<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="MetroPad.MainView"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MetroPad"
    xmlns:common="using:MetroPad.Common"
    xmlns:converters="using:MetroPad.Converters"
    xmlns:callisto="Callisto"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:EmptyStringConverter x:Key="EmptyStringConverter" />
        <converters:NullToBooleanConverter x:Key="NullToBooleanConverter" />
        <common:BooleanNegationConverter x:Key="InverseBooleanConverter" />
        
        <x:String x:Key="AppName">MetroPad</x:String>
    </Page.Resources>
    <Page.TopAppBar>
        <AppBar Padding="10,0,10,0" IsOpen="{Binding Path=SelectedDocument.StorageFile, Converter={StaticResource NullToBooleanConverter}}">
            <Grid>
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding Path=NewCommand}"
                            AutomationProperties.AccessKey="Control N"
                            Style="{StaticResource AppBarButtonStyle}" Content="&#xE130;" AutomationProperties.Name="New"/>
                    <Button Command="{Binding Path=OpenCommand}"
                            AutomationProperties.AccessKey="Control O"
                            AutomationProperties.Name="Open" Style="{StaticResource AppBarButtonStyle}" Content="&#xE1A5;" />
                    <ToggleButton Command="{Binding Path=EditCommand}"
                        AutomationProperties.Name="Edit"
                        IsChecked="{Binding Path=IsEditing}"                        
                        Style="{StaticResource AppBarToggleButtonStyle}" Content="&#xE104;" />
                    <Button Command="{Binding Path=SaveCommand}" 
                        Style="{StaticResource SaveAppBarButtonStyle}" 
                        AutomationProperties.AccessKey="Control S"/>
                    <Button Command="{Binding Path=PrintCommand}"
                            AutomationProperties.Name="Print"
                        Style="{StaticResource AppBarButtonStyle}" 
                        AutomationProperties.AccessKey="Control P"/>
                </StackPanel>
            </Grid>

        </AppBar>
    </Page.TopAppBar>    

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
        
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>


            <RichEditBox x:Name="TextEditor" TextChanged="TextEditor_TextChanged" IsReadOnly="{Binding Path=SelectedDocument.IsEditing, Converter={StaticResource InverseBooleanConverter}}" />

            <Border Grid.Row="1" Background="Black">
                <TextBlock Text="{Binding Path=StatusText}" Foreground="White" Margin="12,5"/>
            </Border>
        </Grid>
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
